# Phase 3: Service 기초
# Pod를 네트워크로 노출하기

# 1. ClusterIP Service (클러스터 내부용)
apiVersion: v1
kind: Service
metadata:
  name: internal-service
  namespace: test-namespace
spec:
  type: ClusterIP  # 기본값, 생략 가능
  selector:
    app: my-app
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP

---
# 2. NodePort Service (외부 접속용)
apiVersion: v1
kind: Service
metadata:
  name: external-service
  namespace: test-namespace
spec:
  type: NodePort
  selector:
    app: my-app
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080  # 30000-32767 범위

---
# 3. 여러 Pod를 하나의 Service로
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-test-app
  namespace: test-namespace
spec:
  replicas: 3
  selector:
    matchLabels:
      app: service-test
  template:
    metadata:
      labels:
        app: service-test
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: service-test
  namespace: test-namespace
spec:
  type: NodePort
  selector:
    app: service-test
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30081

---
# Service 테스트 가이드
apiVersion: v1
kind: ConfigMap
metadata:
  name: service-guide
  namespace: test-namespace
data:
  guide.txt: |
    # Service 테스트 명령어
    
    1. Service 확인
    kubectl get svc -n test-namespace
    
    2. Endpoints 확인 (연결된 Pod)
    kubectl get endpoints -n test-namespace
    
    3. NodePort 접속
    curl http://localhost:30080
    curl http://localhost:30081
    
    4. ClusterIP 테스트
    kubectl run test --image=busybox -it --rm -- wget -O- internal-service
    
    5. DNS 테스트
    kubectl run test --image=busybox -it --rm -- nslookup internal-service
