# Phase 2: 애플리케이션 업데이트
# Rolling Update 실습

# 초기 배포 (v1)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: update-demo
  namespace: test-namespace
spec:
  replicas: 4
  selector:
    matchLabels:
      app: update-demo
  template:
    metadata:
      labels:
        app: update-demo
        version: v1
    spec:
      containers:
      - name: nginx
        image: nginx:1.23-alpine  # 구 버전
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: update-demo-service
  namespace: test-namespace
spec:
  type: NodePort
  selector:
    app: update-demo
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30002

---
# Update 실습 가이드
apiVersion: v1
kind: ConfigMap
metadata:
  name: update-guide
  namespace: test-namespace
data:
  commands.txt: |
    # Rolling Update 실습
    
    1. 초기 배포
    kubectl apply -f 03-update-practice.yaml
    
    2. Pod 상태 모니터링 (새 터미널)
    kubectl get pods -n test-namespace -l app=update-demo -w
    
    3. 이미지 업데이트 (v1 -> v2)
    kubectl set image deployment/update-demo nginx=nginx:1.24-alpine -n test-namespace
    
    4. 업데이트 상태 확인
    kubectl rollout status deployment/update-demo -n test-namespace
    
    5. 배포 히스토리
    kubectl rollout history deployment/update-demo -n test-namespace
    
    6. 롤백 (이전 버전으로)
    kubectl rollout undo deployment/update-demo -n test-namespace
    
    7. Pod 개수 조정 (스케일링)
    kubectl scale deployment update-demo --replicas=6 -n test-namespace
