# Phase 2: 첫 애플리케이션 배포
# 간단한 Nginx 웹서버 배포 실습

# 1. 가장 기본적인 Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-first-app
  namespace: test-namespace
spec:
  replicas: 1  # Pod 1개로 시작
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: nginx
        image: nginx:alpine  # 가벼운 alpine 이미지
        ports:
        - containerPort: 80

---
# 2. 3개 복제본으로 늘려보기
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: test-namespace
spec:
  replicas: 3  # Pod 3개 실행
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - name: nginx
        image: nginx:1.24-alpine
        ports:
        - containerPort: 80
        resources:  # 리소스 제한 추가
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"

---
# 3. 버전 태그 활용
apiVersion: apps/v1
kind: Deployment
metadata:
  name: versioned-app
  namespace: test-namespace
  labels:
    version: v1.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: versioned-app
  template:
    metadata:
      labels:
        app: versioned-app
        version: v1.0
    spec:
      containers:
      - name: nginx
        image: nginx:1.23-alpine  # 특정 버전 지정
        ports:
        - containerPort: 80
