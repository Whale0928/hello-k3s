# Phase 6: Backend Layer
# Spring Boot 애플리케이션 배포

# Backend 설정
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: test-namespace
data:
  application.properties: |
    server.port=8080
    spring.application.name=skk3s-app
    
    # Database 설정
    spring.datasource.url=jdbc:mysql://mysql-service:3306/myapp?useSSL=false
    spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
    spring.jpa.hibernate.ddl-auto=update
    spring.jpa.show-sql=true
    
    # Actuator
    management.endpoints.web.exposure.include=health,info,metrics
    management.endpoint.health.show-details=always

---
# Backend Secret
apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: test-namespace
type: Opaque
stringData:
  db-username: "appuser"
  db-password: "userpassword123"

---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: test-namespace
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        tier: backend
    spec:
      initContainers:
      # MySQL이 준비될 때까지 대기
      - name: wait-for-mysql
        image: busybox:1.36
        command: ['sh', '-c', 'until nc -z mysql-service 3306; do echo waiting for mysql; sleep 2; done']
      
      containers:
      - name: skk3s
        image: skk3s:latest
        imagePullPolicy: Never  # 로컬 이미지 사용
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: db-username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: db-password
        volumeMounts:
        - name: config
          mountPath: /app/config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: backend-config

---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: test-namespace
spec:
  type: NodePort
  selector:
    app: backend
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30088

---
# 테스트용 curl Pod
apiVersion: v1
kind: Pod
metadata:
  name: backend-test
  namespace: test-namespace
spec:
  containers:
  - name: curl
    image: curlimages/curl:latest
    command: ['sleep', '3600']
